import streamlit as st
import pandas as pd
import numpy as np

st.set_page_config(page_title="AkÄ±llÄ± Vardiya PlanlayÄ±cÄ±", layout="wide")

st.title("ğŸ§­ AkÄ±llÄ± Vardiya PlanlayÄ±cÄ±")

# -----------------------------
# PARAMETRELER
# -----------------------------
vardiyalar = {
    "12 vardiyasÄ±": {"saat_aralÄ±ÄŸÄ±": "08:00-16:00", "sÃ¼re": 7.5},
    "35 vardiyasÄ±": {"saat_aralÄ±ÄŸÄ±": "16:00-24:00", "sÃ¼re": 7.5},
    "51 vardiyasÄ±": {"saat_aralÄ±ÄŸÄ±": "24:00-08:00", "sÃ¼re": 7.5},
}

# GÃ¼nler
gunler = ["Pazartesi", "SalÄ±", "Ã‡arÅŸamba", "PerÅŸembe", "Cuma", "Cumartesi", "Pazar"]

# BÃ¶lÃ¼mler ve kiÅŸi sayÄ±larÄ±
bolumler = {
    "KaymaklÄ±": 9,
    "YoÄŸurt": 8,
    "Ayran": 7,
    "SÃ¼t Dolum": 6,
    "BakÄ±m": 5,
}

# -----------------------------
# AKILLI PLANLAMA
# -----------------------------
def plan_olustur():
    plan = []
    np.random.seed(42)  # sabit sonuÃ§lar iÃ§in

    for bolum, kisi_sayisi in bolumler.items():
        for gun in gunler:
            # 3 vardiyaya dengeli daÄŸÄ±tÄ±m
            vardiya_basina = kisi_sayisi // 3
            kalan = kisi_sayisi % 3
            dagilim = [vardiya_basina] * 3
            for i in range(kalan):
                dagilim[i] += 1

            # Her vardiyanÄ±n toplam Ã§alÄ±ÅŸma saati
            for i, (vardiya_adi, v_detay) in enumerate(vardiyalar.items()):
                calisma_saat = dagilim[i] * v_detay["sÃ¼re"]
                fte = calisma_saat / 7.5
                plan.append({
                    "BÃ¶lÃ¼m": bolum,
                    "GÃ¼n": gun,
                    "Vardiya": vardiya_adi,
                    "KiÅŸi SayÄ±sÄ±": dagilim[i],
                    "Toplam Ã‡alÄ±ÅŸma Saati": calisma_saat,
                    "FTE": round(fte, 2)
                })
    return pd.DataFrame(plan)

df = plan_olustur()

# -----------------------------
# MESAI Ä°HTÄ°YACI HESAPLAMA
# -----------------------------
# Burada mesai ihtiyacÄ±nÄ± Ã¶rnek olarak rastgele belirliyoruz,
# istenirse Ã¼retim planÄ±na gÃ¶re dinamik hale getirilebilir.
df["Mesai (saat)"] = np.where(df["KiÅŸi SayÄ±sÄ±"] < 2, 1.5, 0)

# -----------------------------
# HAFTALIK Ã–ZETLER
# -----------------------------
haftalik_ozet = (
    df.groupby("BÃ¶lÃ¼m")
    .agg({
        "Toplam Ã‡alÄ±ÅŸma Saati": "sum",
        "Mesai (saat)": "sum",
        "FTE": "sum"
    })
    .reset_index()
)

# KÃ¼mÃ¼latif toplam
toplam_satir = pd.DataFrame({
    "BÃ¶lÃ¼m": ["TOPLAM"],
    "Toplam Ã‡alÄ±ÅŸma Saati": [haftalik_ozet["Toplam Ã‡alÄ±ÅŸma Saati"].sum()],
    "Mesai (saat)": [haftalik_ozet["Mesai (saat)"].sum()],
    "FTE": [haftalik_ozet["FTE"].sum()]
})

haftalik_ozet = pd.concat([haftalik_ozet, toplam_satir], ignore_index=True)

# -----------------------------
# GÃ–RSEL ARAYÃœZ
# -----------------------------
st.subheader("ğŸ“… GÃ¼nlÃ¼k Vardiya PlanÄ±")
st.dataframe(df, use_container_width=True)

st.subheader("ğŸ“Š HaftalÄ±k FTE ve Ã‡alÄ±ÅŸma Saati Ã–zeti")
st.dataframe(haftalik_ozet, use_container_width=True)

# Grafik
import matplotlib.pyplot as plt

fig, ax = plt.subplots()
ax.bar(haftalik_ozet["BÃ¶lÃ¼m"], haftalik_ozet["FTE"])
ax.set_ylabel("Toplam FTE")
ax.set_title("HaftalÄ±k FTE DaÄŸÄ±lÄ±mÄ± (BÃ¶lÃ¼m BazlÄ±)")
st.pyplot(fig)

st.success("Planlama tamamlandÄ±! TÃ¼m vardiyalar dengeli, FTE deÄŸerleri hesaplandÄ±.")
